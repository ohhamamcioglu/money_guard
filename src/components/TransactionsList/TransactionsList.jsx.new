import { useState } from 'react';
import { useSelector } from 'react-redux';

import TransactionsItem from '../TransactionsItem';
import ModalEditTransaction from '../ModalEditTransaction';
import styles from './TransactionsList.module.css';

const TransactionsList = () => {
  const { items: transactions, isLoading } = useSelector(state => state.transactions);
  const [editingTransaction, setEditingTransaction] = useState(null);
  const [isEditModalOpen, setIsEditModalOpen] = useState(false);

  const handleEditTransaction = (transaction) => {
    setEditingTransaction(transaction);
    setIsEditModalOpen(true);
  };

  const handleCloseEditModal = () => {
    setIsEditModalOpen(false);
    setEditingTransaction(null);
  };

  if (isLoading) {
    return (
      <div className={styles.listContainer}>
        <div className={styles.loadingState}>
          <div className={styles.loadingSpinner} />
          <div>Loading transactions...</div>
        </div>
      </div>
    );
  }

  return (
    <>
      <div className={styles.listContainer}>
        {/* Table Header */}
        <div className={styles.tableHeader}>
          <div className={styles.headerCell}>Date</div>
          <div className={styles.headerCell}>Type</div>
          <div className={styles.headerCell}>Category</div>
          <div className={styles.headerCell}>Comment</div>
          <div className={styles.headerCell}>Sum</div>
          <div className={styles.headerCell}></div>
        </div>

        {/* Table Body */}
        <div className={styles.tableBody}>
          {transactions.length === 0 ? (
            <div className={styles.emptyState}>
              <div className={styles.emptyStateIcon}>ðŸ’³</div>
              <h3 className={styles.emptyStateTitle}>No transactions yet</h3>
              <p className={styles.emptyStateText}>
                Click "Add transaction" to add your first transaction
              </p>
            </div>
          ) : (
            transactions.map((transaction) => (
              <TransactionsItem
                key={transaction.id}
                transaction={transaction}
                onEdit={handleEditTransaction}
              />
            ))
          )}
        </div>
      </div>

      {isEditModalOpen && editingTransaction && (
        <ModalEditTransaction
          transaction={editingTransaction}
          onClose={handleCloseEditModal}
        />
      )}
    </>
  );
};

export default TransactionsList;
